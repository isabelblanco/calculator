{"ast":null,"code":"import _slicedToArray from \"/home/isabel/formaciones/react/udemy_react-calc-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/isabel/formaciones/react/udemy_react-calc-app/src/App.tsx\";\n\n/* eslint no-eval: 0 */\nimport React, { useState } from 'react';\nimport words from 'lodash.words';\nimport Functions from './components/Functions';\nimport Numbers from './components/Numbers';\nimport MathOperations from './components/MathOperations';\nimport Result from './components/Result';\nimport './App.css';\n\nvar App = function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      stack = _useState2[0],\n      setStack = _useState2[1];\n\n  var items = words(stack, /[^-^+^*^/]+/g);\n  var value = items.length > 0 ? items[items.length - 1] : \"0\";\n  return React.createElement(\"main\", {\n    className: \"react-calculator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Result, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Numbers, {\n    onClickNumber: function onClickNumber(number) {\n      return setStack(\"\".concat(stack).concat(number));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Functions, {\n    onContentClear: function onContentClear() {\n      return setStack('');\n    },\n    onDelete: function onDelete() {\n      if (stack.length > 0) {\n        var newStack = stack.substring(0, stack.length - 1);\n        setStack(newStack);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(MathOperations, {\n    onClickOperation: function onClickOperation(operation) {\n      return setStack(\"\".concat(stack).concat(operation));\n    },\n    onClickEqual: function onClickEqual(equal) {\n      return setStack(eval(stack).toString());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/isabel/formaciones/react/udemy_react-calc-app/src/App.tsx"],"names":["React","useState","words","Functions","Numbers","MathOperations","Result","App","stack","setStack","items","value","length","number","newStack","substring","operation","equal","eval","toString"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;;AAEA,IAAMC,GAAO,GAAG,SAAVA,GAAU,GAAM;AAAA,kBAEQN,QAAQ,CAAC,EAAD,CAFhB;AAAA;AAAA,MAEXO,KAFW;AAAA,MAEJC,QAFI;;AAIlB,MAAMC,KAAK,GAAGR,KAAK,CAACM,KAAD,EAAQ,cAAR,CAAnB;AAEA,MAAMG,KAAK,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAf,GAAmBF,KAAK,CAACA,KAAK,CAACE,MAAN,GAAa,CAAd,CAAxB,GAA2C,GAAzD;AAEA,SACA;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAED,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,OAAD;AAAS,IAAA,aAAa,EAAE,uBAAAE,MAAM;AAAA,aAAIJ,QAAQ,WAAID,KAAJ,SAAYK,MAAZ,EAAZ;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,SAAD;AACI,IAAA,cAAc,EAAE;AAAA,aAAMJ,QAAQ,CAAC,EAAD,CAAd;AAAA,KADpB;AAEI,IAAA,QAAQ,EAAE,oBAAM;AACZ,UAAID,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;AAClB,YAAME,QAAQ,GAAGN,KAAK,CAACO,SAAN,CAAgB,CAAhB,EAAmBP,KAAK,CAACI,MAAN,GAAe,CAAlC,CAAjB;AACAH,QAAAA,QAAQ,CAACK,QAAD,CAAR;AACH;AACJ,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAYI,oBAAC,cAAD;AACI,IAAA,gBAAgB,EAAE,0BAAAE,SAAS;AAAA,aAAIP,QAAQ,WAAID,KAAJ,SAAYQ,SAAZ,EAAZ;AAAA,KAD/B;AAEI,IAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,aAAIR,QAAQ,CAACS,IAAI,CAACV,KAAD,CAAJ,CAAYW,QAAZ,EAAD,CAAZ;AAAA,KAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADA;AAkBH,CA1BD;;AA4BA,eAAeZ,GAAf","sourcesContent":["/* eslint no-eval: 0 */\r\nimport React, { useState, FC } from 'react'\r\nimport words from 'lodash.words'\r\nimport Functions from './components/Functions'\r\nimport Numbers from './components/Numbers'\r\nimport MathOperations from './components/MathOperations'\r\nimport Result from './components/Result'\r\nimport './App.css'\r\n\r\nconst App: FC = () => {\r\n\r\n    const [stack, setStack] = useState(\"\")\r\n\r\n    const items = words(stack, /[^-^+^*^/]+/g)\r\n\r\n    const value = items.length > 0 ? items[items.length-1] : \"0\";\r\n\r\n    return (\r\n    <main className='react-calculator'>\r\n        <Result value={value} />\r\n        <Numbers onClickNumber={number => setStack(`${stack}${number}`)} />\r\n        <Functions \r\n            onContentClear={() => setStack('')}\r\n            onDelete={() => {\r\n                if (stack.length > 0) {\r\n                    const newStack = stack.substring(0, stack.length - 1)\r\n                    setStack(newStack)\r\n                }\r\n            }}\r\n        />\r\n        <MathOperations \r\n            onClickOperation={operation => setStack(`${stack}${operation}`)} \r\n            onClickEqual={equal => setStack(eval(stack).toString())}\r\n        />\r\n    </main>)\r\n}\r\n\r\nexport default App\r\n\r\n"]},"metadata":{},"sourceType":"module"}